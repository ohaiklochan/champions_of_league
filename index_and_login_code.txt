
let navContainer=document.getElementById('top-container')
let navBarSection=document.getElementById('nav-bar')
let navBarUl=document.getElementById('nav-ul')
let mainContainer=document.getElementById('main-container')

let body=document.querySelector('body')
body.className="main"
let mainHeading=document.createElement('h2')
mainHeading.className="side-label"
let leftCard=document.createElement('div')
leftCard.className="card-info"

let rightSide=document.getElementById('side-bar')

let mainObj={}
let mainCh={}
let globalNav=undefined
let championId={}
let globalListId={}
let currentUser={}
let userLists=[]


let signUpAction = () => {
    rightSide.style.display="none"
    body.className="login"
    mainContainer.innerHTML=""
    navContainer.style.visibility="false"
    mainContainer.id="main-container"
    body.className="login"
    let signUpPopup=document.createElement('div')
    signUpPopup.className="signup-form-popup"
    let signupForm=document.createElement('form')
    signupForm.className="form-container"
    signupForm.id="signup-form"
    let label=document.createElement('h2')
    label.innerText="Sign Up"
    let nameInput=document.createElement('input')
    nameInput.placeholder="Name"
    nameInput.name="name"
    nameInput.type="text"
    let emailInput=document.createElement('input')
    emailInput.placeholder="Email"
    emailInput.name="email"
    emailInput.type="text"
    let usernameInput=document.createElement('input')
    usernameInput.placeholder="User Name"
    usernameInput.name="username"
    usernameInput.type="text"
    let createAcct=document.createElement("BUTTON")
    createAcct.type="submit"
    createAcct.class="btn"
    createAcct.innerText="Create Account!"
 
    mainContainer.innerHTML=""
    navContainer.style.visibility="false"
    mainContainer.id="main-container-3"
    body.className="login"
    let logInPopup=document.createElement('div')
    logInPopup.className="login-form-popup"
    let logInForm=document.createElement('form')
      
    logInForm.className="form-container"
    logInForm.id="signup-form"
    let labelLogin=document.createElement('h2')
    labelLogin.innerText="Login"
    let nameInputLogin=document.createElement('input')
    nameInputLogin.placeholder="Name"
    nameInputLogin.name="name"
    nameInputLogin.type="text"
    let emailInputLogin=document.createElement('input')
    emailInputLogin.placeholder="Email"
    emailInputLogin.name="email"
    emailInputLogin.type="text"
    let nameInputLoginF=document.createElement('input')
    nameInputLoginF.placeholder="User Name"
    nameInputLoginF.name="username"
    nameInputLoginF.type="text"
    let login=document.createElement("BUTTON")
    login.type="submit"
    login.class="btn"
    login.innerText="Login!"

    logInForm.append(labelLogin, nameInputLogin, emailInputLogin, nameInputLoginF, login)
    logInPopup.append(logInForm)
    mainContainer.append(logInPopup)

   signupForm.append(label, nameInput, emailInput, usernameInput, createAcct)
   signUpPopup.append(signupForm)
   mainContainer.append(signUpPopup)

 
    signupForm.addEventListener("submit", (e) => {
        e.preventDefault()
        body.className="main"
        let name=e.target.name.value
        let email=e.target.email.value
        let username=e.target.username.value
        fetch(`${BASE_URL}/users`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                name: name,
                email: email,
                username: username
            })
        })
        .then(resp => resp.json())
        .then(response => {
           currentUser = response  
            if(response.id) {
                mainContainer.id="main-container"
                startMainPage()
            }
        })
        
    })


    logInForm.addEventListener("submit", (evt) => {
        evt.preventDefault()
        console.log("click")
    
        let userName=evt.target.username.value
        fetch(`${BASE_URL}/login/${userName}`)
        .then(resp => resp.json())
        .then(foundUser => {
            currentUser = foundUser
            if (foundUser.username===userName) {
                console.log(foundUser) 
                console.log(currentUser)
                listFormLogin()
            }
    
        })
    })
}
signUpAction()
console.log(currentUser)


function startMainPage() {
    mainContainer.innerHTML=""
   
    if (!userLists.length===0) {
        mainContainer.id="main-container-2"
    }
    else {
        mainContainer.id="main-container"
    }

    fetch(`${BASE_URL}/users/${currentUser.id}`)
    .then(resp=> resp.json())
    .then(user => {
        currentUser = user
        if (user.lists.length===0) {
            rightSide.style.display="none"
        }
        else {
           
        }
    
        displayList(currentUser.lists)
    })

}  

let displayList = () => {
    fetch(`${BASE_URL}/champions`)
   .then(resp => resp.json())
   .then(champsArray => {
       
    //    display champions on the main section
       mainChamps(champsArray[0])
       mainObj=champsArray
       champsArray.forEach((champ)=> {
           renderChampList(champ)
       })

       let logOut=document.createElement('li')
       logOut.innerText="Logout"
       navBarUl.append(logOut)
        logOut.addEventListener(("click"), (evt) => {
            logOutUser(currentUser)
        })
    })

    let renderChampList = (champ) => {
        mainCh=champ
        let navButton=document.createElement('li')
        navButton.innerText="Champions"
        navBarUl.append(navButton)
        navBarSection.append(navBarUl)
        globalNav=navButton
        navBarSection.append(navBarUl)
        navButton.addEventListener("click",(evt) => {
            mainChamps(champ)
         
        })
    }
}

    let mainChamps = (champs) => {
  
        mainContainer.innerHTML=""
    
        title=document.createElement("h2")
        champs.Champions.forEach(champion => {
            championId=Champion.id
            mainContainer.HTML=""
            let cardDiv=document.createElement('div')
            cardDiv.className="card"
            title=document.createElement("h4")
            descrip=document.createElement('p')
            image=document.createElement('img')
            image.className="image-top"
            image.src=Champion.image
            image.width=120
            image.height=120
            title.innerText=Champion.name
            descrip.innerText=Champion.description
            cardDiv.append(image)
            mainContainer.append(cardDiv)
            cardDiv.append(title)
            mainContainer.append(cardDiv)
            cardDiv.append(descrip)
            mainContainer.append(cardDiv)
            
        
            let button=document.createElement('span')
            button.innerText="Like This Champion!"
            cardDiv.append(button)
            cardDiv.addEventListener("click", (e) =>{
                seeIfListIsEmpty(champion)  
            })
             
        })
    }

    let checkForExistingList=() => {
        fetch(`${BASE_URL}/users/${currentUser.id}`)
        .then(resp => resp.json())
        .then(userArray => {
            userLists=userArray.list
 
            console.log(userLists)
        })  
    }

    let seeIfListIsEmpty = (champion) => {
        if(userList.length===0) {
            renderForm(champion)
        }  
        else {
            renderSelectForm(champion)
        }
    }

    let renderSelectForm = (champion) => {
        mainContainer.innerHTML=""
        let form=document.createElement('form')
        form.className="form-container"

        let heading=document.createElement('h3')
        heading.innerText="Choose A List"
        let submitButton=document.createElement('BUTTON')           
        submitButton.className="btn"
        submitButton.type="submit"
        submitButton.innerText="Add to this List!"

        let newNameBtn=document.createElement('SPAN')

        newNameBtn.innerText="Create New Name!"
        newNameBtn.id="createName"

        let formSelect=document.createElement('SELECT')

        for(let i=0; i<userLists.length; i++) {
            let options=document.createElement('option')
            options.setAttribute("value",userLists[i]["name"])
            value=document.createTextNode(userLists[i]["name"])
            options.append(value)
            globalListId=userLists[i]["id"]
            formSelect.insertBefore(options, formSelect.lastChild)
        }

        form.append(heading, formSelect, submitButton,newNameBtn)
        mainContainer.append(form)

        newNameBtn.addEventListener("click", (evt) => {
            evt.preventDefault()
            championId=champion.id
            mainContainer.innerHTML=""
            renderForm(champion)
        })

        form.addEventListener("submit", (evt) => {
            evt.preventDefault()

            let selectElement=document.querySelector('select')
            let name= selectElement.options[selectElement.selectedIndex].value
        
            fetch(`${BASE_URL}/lists`, {
                method:'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify ({
                    id: globalListId,
                    name: name,
                    champion_id: championId,
                    user_id: currentUser.id
                })
            })
            .then(resp => resp.json())
            .then(list => {
            
                let newp=document.createElement('h5')
                newp.className="champion-name"
                let tags=document.querySelectorAll('h2.champion-name')
   
                let searchText=name;
                let found; 
        
                console.log(searchText)
                for(let i=0; i< tags.length; i++) {
                    if(tags[i].textContent==searchText) {
                    found=tags[i]
                    let button=document.querySelector('button')
                    let selectedCard=found.parentNode
                    newp.innerText=champion.name
                    let findh5Element=document.querySelector('h5').insertAdjacentElement('beforebegin', newp)
                    selectedCard.appendChild(findh5Element)
                    break;
                }
            }

        
            mainChampion(mainChamp)
        })
  
    })


    let renderForm = (champion) => {
        mainContainer.innerHTML=""
        championId=champion.id
        mainContainer.innerHTML=""
        let form=document.createElement('form')
        form.className="form-container"

        let heading=document.createElement('h3')
        heading.innerText="Create New List"

        let inputField=document.createElement('input')
        inputField.placeholder="Name Your List"
        inputField.type="text"


        let submitButton=document.createElement('BUTTON')           
        submitButton.className="btn"
        submitButton.type="submit"
        submitButton.innerText="Create!"

        form.append(heading, inputField, submitButton)
        mainContainer.append(form)

      

        form.addEventListener("submit", (evt) => {
            evt.preventDefault()

            let name=document.querySelector('input').value

            fetch(`${BASE_URL}/lists`, {
                method:'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify( {
                    name: name,
                    champion_id: championId,
                    user_id: currentUser.id
                })
            })
            .then(resp => resp.json())
            .then(list => {

                if(list.id) {
                    userList.push(list)

                    let button=document.createElement('div')
                    button.className="form-bttn"

                    rightSide.append(button)

                    mainChampion(mainObj[0])
                    let sideLabel=document.createElement('h2')
                    sideLabel.className="champ-name"

                    sideLabel.innerText=list.name
                    button.append(sideLabel)
                    rightSide.append(button)

                    champion.list_id=list.id

                    list.champions.forEach(champion => {
                        let champName=document.createElement('h5')
                        champName.className="champ-name"
    
                        champName.innerText=champion.name
                        button.append(champName)
                        rightSide.append(button)

                        console.log(rightSide)
                        let deleteButton=document.createElement('BUTTON')
                        deleteButton.type="submit"
                        deleteButton.innerText="Remove"
                        deleteButton.className="deleteButton"
                        button.append(deleteButton)
                        rightSide.append(button)

                        let updateButton=document.createElement("BUTTON")
                        updateButton.type="submit"
                        updateButton.className="submitButton"
                        updateButton.innerHTML="Update Name"
                        button.append(updateButton)
                        rightSide.append(button)


                        let getCard=document.getElementsByClassName('card')
                        mainContainer.id="main-container-2"
                        rightSide.style.display="block"
                        getCard.className="card-2"
                        console.log(userLists)

                        deleteButton.addEventListener('click', (evt) => {
                            fetch(`${BASE_URL}/lists/${list.id}`, {
                                method: 'DELETE'
                            })
                
                            button.remove()
                            userLists.pop(list)
                    
                        })

                        updateButton.addEventListener("click", (evt) => {
                            evt.preventDefault()
                            userSists.pop(list)
                            globalListId=list.id
                            mainContainer.innerHTML=""
                            let updateform=document.createElement('form')

                            updateform.className="form-container"
                            let heading=document.createElement('h3')
                            heading.innerText="Update List Name!"
                            let inputField=document.createElement('input')
                            inputField.placeholder="Update List Name"
                            inputField.type="text"
              
                            let updateButton=document.createElement('BUTTON')           
                            updateButton.className="btn"
                            updateButton.type="submit"
                            updateButton.innerText="Update!"
                            updateform.append(heading, inputField, updateButton)
                            mainContainer.append(updateform)
                     
                            updateform.addEventListener("submit", (evt) => {
                                evt.preventDefault()
                                let newName=document.querySelector('input').value
                                console.log(newName)
                                fetch(`${BASE_URL}/lists/${list.id}`, {
                                    method: 'PATCH',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'Accept': 'application/json'
                                    },
                                    body: JSON.stringify ({
                                        name: newName,
                                        id: list.id,
                                        champion_id: renderChampionId(list)
        
                                    })

                                })
                                .then(resp => resp.json())
                                .then(list => {
                                    userList.push(list)
                                    mainChamp(mainObj[0])
                                    sideLabel.innerText=list.name
                                })
    
                            })
              
                        })
                    })
                                      
                }
            })
              
        })
    }
}

let logOutUser = (currentUser) => {
    fetch(`${BASE_URL}/users/${currentUser.id}`, {
        method: "DELETE"
    })
     
     window.location.reload()
      
}

     let renderChampionId = (list) => {
         list.champions.forEach (champion => {
             champion.id
        })
    }

-----------------------------

const BASE_URL = "http://127.0.0.1:3000/"
let giantChampionsArray=[]
let listFormLogin = () => {
    mainContainer.innerHTML=""

    fetch(`${BASE_URL}/users`)
    .then(resp=>resp.json())
    .then(userArray => {
        console.log(userArray)

        let championLists=[]
        userArray.forEach((user) => {
            if(user.id===currentUser.id) {
                championLists.push(user.lists)
                currentUser.id=user.id
          
      
          }             
      })

      userLists.push(championLists)

      console.log(championLists)
      console.log(userLists)
      championLists[0].forEach((champList) => {
     
       console.log(champList)
    
        let sideCard=document.createElement('div')
            sideCard.id="side-bar"
            sideCard.className="container"
            let buttonX=document.createElement('div')
            buttonX.className="buttonX"
       
            rightSide.append(buttonX)
            let sideLabel=document.createElement('h2')
            sideLabel.className="champList-name"
            
            sideLabel.innerText=list.name
            buttonX.append(sideLabel)
            rightSide.append(buttonX)

            let deleteButton=document.createElement('BUTTON')
            deleteButton.type="submit"
            deleteButton.innerText="Remove"
            deleteButton.className="deleteButton"
            buttonX.append(deleteButton)
            rightSide.append(buttonX)


            let updateButton=document.createElement("BUTTON")
            updateButton.type="submit"
            updateButton.className="submitButton"
            updateButton.innerHTML="Update Name"
            buttonX.append(updateButton)
            rightSide.append(buttonX)
            let getCard=document.getElementsByClassName('card')
            mainContainer.id="main-container-2"
            rightSide.style.display="block"
            getCard.className="card-2"
            

 
            findChampionsInList(champ.id)
     
            let delayed=()=>{
                for(let i=0; i<giantChampionsArray.length; i++){
                    if(giantChampionsArray[i]["list"]["id"]===championLists.id){
                            
                        let champName=document.createElement('h5')
                        champName.className="champ-name"
                        champName.innerHTML=giantChampionsArray[i]["name"]
                        buttonX.append(champName)
                        console.log("hello")
                        rightSide.append(buttonX)
                    }
               
                } 
            }

            setTimeout(delayed,200)
      

         
        })
        console.log(giantChampionsArray)

        let buttonsDelay = () => {
            
            let buttonX=document.createElement('div')
            buttonX.className="buttonX"
            let deleteButton=document.createElement('BUTTON')
            deleteButton.type="submit"
            deleteButton.innerText="Remove"
            deleteButton.className="deleteButton"
            buttonX.append(deleteButton)
            rightSide.append(buttonX)


            let updateButton=document.createElement("BUTTON")
            updateButton.type="submit"
            updateButton.className="submitButton"
            updateButton.innerHTML="Update Name"
            buttonX.append(updateButton)
            rightSide.append(buttonX)
            let getCard=document.getElementsByClassName('card')
            mainContainer.id="main-container-2"
            rightSide.style.display="block"
            getCard.className="card-2"
            deleteButton.addEventListener('click', (evt) => {
                fetch(`${BASE_URL}/lists/${list.id}`, {
                    method: 'DELETE'
                })
                buttonX.remove()
                userLists.pop(list)

            })


            updateButton.addEventListener("click", (evt) => {
                evt.preventDefault()
                userLists.pop(list)
                globalListId=list.id
                mainContainer.innerHTML=""
                let updateform=document.createElement('form')

                updateform.className="form-container"
                let heading=document.createElement('h3')
                heading.innerText="Update List Name!"
                let inputField=document.createElement('input')
                inputField.placeholder="Update List Name"
                inputField.type="text"

                let updateButton=document.createElement('BUTTON')           
                updateButton.className="btn"
                updateButton.type="submit"
                updateButton.innerText="Update!"
                updateform.append(heading, inputField, updateButton)
                mainContainer.append(updateform)

                updateform.addEventListener("submit", (evt) => {
                    evt.preventDefault()
                    let newName=document.querySelector('input').value
                    console.log(newName)
                    fetch(`${BASE_URL}/lists/${list.id}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({
                            name: newName,
                            id: list.id,
                            champion_id: renderChampionId(list)


                        })

                    })
                    .then(resp => resp.json())
                    .then(list => {
                        userLists.push(list)
                        mainChamp(mainObj[0])
                        sideLabel.innerText=list.name
                    })

                })

            })
        }


      

        setTimeout(buttonsDelay,300)
    })

    rightSide.style.display="block"
    mainContainer.id='main-container-2'
    body.className="main"
    startMainPage()
}


let findChampionsInLists=(id)=> {
    fetch(`${BASE_URL}/lists/${id}`)
    .then(resp=>resp.json())
    .then((champions)=> {
   
    giantChampionsArray.push(champions.champions[0])
  
    return giantChampionsArray

    })
  


}

----------------------------
css=



 #top-container {
  position: absolute;
   top: 15px;
   right: 210px;
   width: 200%;
}

.nav-bar {    
  margin-top: 30px;
}

  #main-container {
    display:grid;
    grid-template-columns: repeat(8ch auto);
    grid-auto-rows:minmax(auto, auto);
    margin-top:200px;
    margin-left: 185px;
    float:center;
    background: rgb(0, 0, 0);
    opacity: .8;
    border-style:solid;
    border-color: #004770;
    border-radius: 5px;
    width: 80%;
    height: auto;
    position:relative;
    
  }

  #main-container-2 {
    display:grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows:minmax(auto, auto);
    margin-top:200px;
    margin-left: 40px;
    float:center;
    background: rgb(0, 0, 0);
    opacity: .8;
    border-style:solid;
    border-color: #004770;
    border-radius: 5px;
    width: 55%;
    height: auto;
    position:relative;
  }

  #main-container-3 {
    display:grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows:minmax(auto, auto);
    margin-top:350px;
    margin-left: center;
    float:center;
    background: rgb(0, 0, 0);
    opacity: .8;
    border-style:solid;
    border-color: #004770;
    border-radius: 5px;
    width: 40%;
    height: 300px;
    position:relative;
  }

  #right-side-temp{
    display:none
  }
 
  .card {
    justify-content: center;
    float:center;
    width: auto;
    height: auto;
    text-align:center;
    margin-left: 24px;
    margin-right: 15px;
    margin-top: 25px;
    background: rgb(0, 0, 0);
    opacity: .8;
    padding-bottom: 50px;
    border-style: solid;
    border-radius: 5px;
    border-color: #004770;
  }

  .image-top{
    align-self: center;
  }
 
 
  .card-2 {
    text-align: center;
    float: left;
    width: auto;
    height: 220px;
    margin-left: 24px;
    margin-right: 15px;
    margin-top: 25px;
    background: rgb(0, 0, 0);
    opacity: .8;
    padding-bottom: 50px;
    border-style: solid;
    border-radius: 5px;
    border-color: #004770; 
  }

  a { 
      position: absolute;
      bottom: 0;
      font-size:10px;
         
  }

  
   
  .btn {
    width:55px;
    height: 200x;
  }
  


  input {
    position:relative;
    width: 100px;
    margin-left:30px;
    width: 100%;
    padding: 15px;
    border-style: solid;
    border-width: 4px;
    border: #004770;
  }

  .form-popup {
    padding: 10px;
    position: absolute;
    width:30px;
    height: 600px;
    left: 300px;
  }

  .login-form-popup {
    padding: 10px;
    position: absolute;
    width:30px;
    height: 600px;
    left: 250px;
  }
  
  /* .form-container {

  } */

 #createName {
    position: absolute;
    margin-top:100px;
    bottom:0;
    left:0;
    margin-left:120px;
    border-style: solid;
    border-color: #004770;
    border-width: 2px;
    font-size:30px;
    font-weight:3px;
    color:#000000;
    text-align: center;
    align-content: center;
    align-items: center;
    justify-content: center;
    padding-top:18px;
    width: 180px;
    height: 80px;
     
  }  

  span {
    position: absolute;
    bottom:0;
    right:0;
    font-family: Georgia, 'Times New Roman', Times, serif;
    color:#000000;
    font-weight: bold;
    width:55px;
    border-radius: 4px;
    border-style:solid;
    border-width: 4px;
    border-color: #004770;
  } 

  #side-card {
    position: relative;
    float:right;
    width: 200px;
    height:20px;
    margin: 20px;
    padding: 5px;
    font-weight: bold;
    font-size: 15px;
  } 

    .side-label {
    padding-bottom: 10px;
    font-family: Georgia, 'Times New Roman', Times, serif;
    color: #2b008f;
    font-size: 45px;
    text-decoration: underline;
    margin-left: 20px;
    padding-left:10px;
    margin-top: 26px;
  } 
    

  h4 {
    
  }
    
 
  #side-bar {
    position: absolute;
    top: 200px;
    right: 100px;
    width: 27%; 
    overflow:scroll;
    background: #000000;
    opacity: .8;
    border-radius: 30px;
    height: 450px;
 } 

   ::-webkit-scrollbar {
     width: 5px;
     }
     
     ::-webkit-scrollbar-track {
     box-shadow: inset 0 0 5px rgb(57, 0, 163); 
     border-radius: 5px;
     } 
     
    
  .buttonX {
    position:relative;
    border: #550086;
    font-family: Georgia, 'Times New Roman', Times, serif;
    border-width: 4px;
    border-radius: 5px;
    padding:10px;
    margin:30px;
    background: rgb(0, 0, 0);
  } 

   h5 {
    position:relative;
  } 

  .champ-name {
    margin-top:30px;
    margin-left:30px;
    font-family: Georgia, 'Times New Roman', Times, serif;
    font-size: 20px;
    color: rgb(0, 0, 0)
  } 

  h2.champ-name {
    margin-left:48px;
    font-family: Georgia, 'Times New Roman', Times, serif;
    font-size: 30px; 
    color:#000000;
  
    margin-top:-15px;
  } 

  h5.champ-name {
    margin-left:48px;
    font-family: Georgia, 'Times New Roman', Times, serif;
    font-size: 20px; 
    color:#6d01ab;
    margin-top: -15px;
    padding-bottom:20px;
  } 
  

  .deleteButton{
    background:rgb(75, 75, 75);
    position:absolute;
    bottom: 0;
    right: 0;
    width: auto;
    height: auto;
  } 

  .submitButton{
    background:rgb(109, 109, 109);
    position:absolute;
    margin-top:15px;    
    bottom: 0;
    left:0;
    width: auto;
    height: auto;
  } 

  button.btn {
    background:rgb(78, 78, 78);
    margin-top:30px;
    font-family: Georgia, 'Times New Roman', Times, serif;
    position: relative;
    border-style: solid;
    border-color: #610088;
    border-width: 4px;
    font-size:30px;
    font-weight:3px;
    color:#380079;
    text-align: center;
    align-items: center;
    padding: 16px 15px;
    width: auto;
    height:auto; 
    float:left;
  } 
     
  h3 {
    font-family: Georgia, 'Times New Roman', Times, serif;
    color: #000000;
    text-shadow: 2px 2px 5px rgb(1, 175, 255);
    font-size:40px;
    margin-left:30px;
  } 

.login {
  background: url("img/backgrounds/LolBackground.jpg"); 
  background-attachment: fixed;
  background-repeat: no-repeat; 
  background-size: cover;
}